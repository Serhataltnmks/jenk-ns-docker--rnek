nano src/main/java/com/example/chess/model/Piece.java



package com.example.chess.model;

public class Piece {
    public enum Type { PAWN, ROOK, KNIGHT, BISHOP, QUEEN, KING }
    public enum Color { WHITE, BLACK }

    private Type type;
    private Color color;
    private int x;  // Current x position on the board
    private int y;  // Current y position on the board

    public Piece(Type type, Color color, int x, int y) {
        this.type = type;
        this.color = color;
        this.x = x;
        this.y = y;
    }

    public Type getType() {
        return type;
    }

    public Color getColor() {
        return color;
    }

    public int getX() {
        return x;
    }

    public int getY() {
        return y;
    }

    public void move(int newX, int newY) {
        this.x = newX;
        this.y = newY;
    }
}
----------------------------------------------------------------------------

nano src/main/java/com/example/chess/model/Board.java



package com.example.chess.model;

import java.util.ArrayList;
import java.util.List;

public class Board {
    private List<Piece> pieces;

    public Board() {
        this.pieces = new ArrayList<>();
        initializeBoard();
    }

    private void initializeBoard() {
        // Satranç tahtasını başlatır, örneğin piyonları yerleştirir
        for (int i = 0; i < 8; i++) {
            pieces.add(new Piece(Piece.Type.PAWN, Piece.Color.WHITE, i, 1));
            pieces.add(new Piece(Piece.Type.PAWN, Piece.Color.BLACK, i, 6));
        }
        // Diğer taşları da ekleyin (kale, at, fil, vezir, şah)
    }

    public List<Piece> getPieces() {
        return pieces;
    }

    public boolean movePiece(Piece piece, int newX, int newY) {
        // Hamleyi kontrol eder ve taşın hareket edip edemeyeceğine karar verir
        piece.move(newX, newY);
        return true;
    }
}
-----------------------------------------------------------------------------





























