pipeline {
    agent any

    environment {
        SONARQUBE_URL = 'http://<sonarqube_url>'  // SonarQube sunucusunun URL'si
        SONARQUBE_KEY = 'ecommerce-project'      // SonarQube projesinin anahtarÄ±
    }

    stages {
        stage('Clone Repository') {
            steps {
                git 'https://gitlab.com/your-username/ecommerce-project.git'
            }
        }
        stage('Build Docker Images') {
            steps {
                script {
                    sh 'docker-compose build'
                }
            }
        }
        stage('Run Docker Containers') {
            steps {
                script {
                    sh 'docker-compose up -d'
                }
            }
        }
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh "mvn sonar:sonar -Dsonar.projectKey=${SONARQUBE_KEY} -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.login=${SONAR_TOKEN}"
                }
            }
        }
        stage('Quality Gate') {
            steps {
                script {
                    timeout(time: 1, unit: 'HOURS') {
                        waitForQualityGate abortPipeline: true
                    }
                }
            }
        }
    }
}
